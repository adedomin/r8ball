(undo-tree-save-format-version . 1)
"89c6e75783c8714b8e6229b7cc72739c13584e7e"
[nil nil nil nil (24754 28119 419034 454000) 0 nil]
([nil nil ((2516 . 2533) (#("se" 0 2 (fontified t face font-lock-keyword-face)) . 2516) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (2519 . 2525) (2520 . 2524) (#("." 0 1 (fontified t)) . 2520) (undo-tree-id91 . -1) 2517 (t 24690 3599 649824 404000)) nil (24754 28119 419029 941000) 0 nil])
([nil nil ((#("
    pub async fn reload_configure(&mut self, p: &Path) -> Result<Config, Box<dyn Error>> {
        self = config::config_file::Config::from_path(p)
    }" 0 1 (fontified t) 1 5 (fontified t face whitespace-space) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 34 (fontified t face font-lock-function-name-face) 34 36 (fontified t) 36 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 44 (fontified t face font-lock-keyword-face) 44 46 (fontified t) 46 47 (fontified t face font-lock-variable-name-face) 47 50 (fontified t) 50 54 (fontified t face font-lock-type-face) 54 57 (fontified t) 57 58 (fontified t syntax-table (1)) 58 59 (fontified t) 59 65 (fontified t face font-lock-type-face) 65 66 (fontified t) 66 72 (fontified t face font-lock-type-face) 72 74 (fontified t) 74 77 (fontified t face font-lock-type-face) 77 78 (fontified t) 78 81 (fontified t face font-lock-keyword-face) 81 82 (fontified t) 82 87 (fontified t face font-lock-type-face) 87 92 (fontified t) 92 100 (fontified t face whitespace-space) 100 104 (fontified t face font-lock-keyword-face) 104 107 (fontified t) 107 113 (fontified t face font-lock-constant-face) 113 115 (fontified t) 115 124 (fontified t face font-lock-constant-face) 124 125 (fontified t face font-lock-constant-face) 125 126 (fontified t face font-lock-constant-face) 126 128 (fontified t) 128 131 (fontified t face font-lock-type-face) 131 132 (fontified t face font-lock-type-face) 132 134 (fontified t face font-lock-type-face) 134 136 (fontified t) 136 145 (fontified t) 145 149 (fontified t) 149 153 (fontified t face whitespace-space) 153 154 (fontified t)) . 2409) (undo-tree-id1 . -153) (undo-tree-id2 . -153) (undo-tree-id3 . -154) (undo-tree-id4 . -154) (undo-tree-id5 . -153) (undo-tree-id6 . -153) (undo-tree-id7 . -153) (undo-tree-id8 . -153) (undo-tree-id9 . -153) (undo-tree-id10 . -153) (undo-tree-id11 . -153) (undo-tree-id12 . -153) (undo-tree-id13 . -107) (undo-tree-id14 . -107) (undo-tree-id15 . -107) (undo-tree-id16 . -107) (undo-tree-id17 . -107) (undo-tree-id18 . -107) (undo-tree-id19 . -107) (undo-tree-id20 . -107) (undo-tree-id21 . -107) (undo-tree-id22 . -107) (undo-tree-id23 . -92) (undo-tree-id24 . -107) (undo-tree-id25 . -107) (undo-tree-id26 . -107) (undo-tree-id27 . -107) (undo-tree-id28 . -112) (undo-tree-id29 . -121) (undo-tree-id30 . -107) (undo-tree-id31 . -121) (undo-tree-id32 . -122) (undo-tree-id33 . -122) (undo-tree-id34 . -122) (undo-tree-id35 . -122) (undo-tree-id36 . -122) (undo-tree-id37 . -122) (undo-tree-id38 . -122) (undo-tree-id39 . -122) (undo-tree-id40 . -122) (undo-tree-id41 . -122) (undo-tree-id42 . -138) (undo-tree-id43 . -138) (undo-tree-id44 . -138) (undo-tree-id45 . -138) (undo-tree-id46 . -138) (undo-tree-id47 . -138) (undo-tree-id48 . -138) (undo-tree-id49 . -138) (undo-tree-id50 . -138) (undo-tree-id51 . -148) (undo-tree-id52 . -148) (undo-tree-id53 . -147) (undo-tree-id54 . -147) (undo-tree-id55 . -147) (undo-tree-id56 . -147) (undo-tree-id57 . -147) (undo-tree-id58 . -147) (undo-tree-id59 . -147) (undo-tree-id60 . -147) (undo-tree-id61 . -147) (undo-tree-id62 . -147) (undo-tree-id63 . -147) (undo-tree-id64 . -147) (undo-tree-id65 . -147) (undo-tree-id66 . -147) (undo-tree-id67 . -147) (undo-tree-id68 . -153) (undo-tree-id69 . -153) (undo-tree-id70 . -154) (undo-tree-id71 . -153) (undo-tree-id72 . -153) (undo-tree-id73 . -153)) nil (24754 28119 418995 116000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2409) (undo-tree-id0 . 1)) nil (24754 28119 418882 838000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2498) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 2499 (2498 . 2499) (t 24754 28119 438552 937000)) nil (24754 32842 640398 533000) 0 nil])
([nil nil ((2524 . 2526) (2519 . 2524) (#("cl" 0 2 (fontified nil)) . 2519) (2519 . 2521) (#("clone" 0 5 (fontified nil)) . -2519) (2519 . 2524) (#("cl" 0 2 (fontified t)) . -2519) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) 2521 (2519 . 2521) (#("l" 0 1 (fontified t)) . -2519) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 2520 (2518 . 2520)) nil (24754 32842 640384 823000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 2518) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (t 24754 32842 658862 110000)) nil (24754 32859 382993 158000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 2518) (undo-tree-id139 . 1)) nil (24754 32859 382974 530000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2518) (undo-tree-id138 . 1)) nil (24754 32859 382970 726000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 2518) (undo-tree-id137 . 1)) nil (24754 32859 382966 969000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2518) (undo-tree-id136 . 1)) nil (24754 32859 382963 60000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2518) (undo-tree-id135 . 1)) nil (24754 32859 382959 355000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 2518) (undo-tree-id117 . 1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . 1) (undo-tree-id134 . -1)) nil (24754 32859 382953 847000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2518) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . -1)) nil (24754 32876 980715 688000) 0 nil])
([nil current ((2436 . 2437) (t 24754 32878 330895 603000)) nil (24754 33101 772104 686000) 0 nil] [nil nil ((2529 . 2533) (2525 . 2529) (2501 . 2506) (#("i" 0 1 (fontified t)) . -2501) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("n" 0 1 (fontified t)) . -2502) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("e" 0 1 (fontified t)) . -2503) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 2504 (2498 . 2504) (t 24754 32859 390408 780000)) ((#(".cline" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 2498) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (2501 . 2504) (#("one()" 0 5 (fontified nil)) . 2501) (#(".clo" 0 4 (fontified nil)) . 2525) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (#("ne()" 0 4 (fontified t)) . 2529) (undo-tree-id258 . -3) (undo-tree-id259 . 1) (undo-tree-id260 . -4) (undo-tree-id261 . 2) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3)) (24754 32876 219759 742000) 0 nil])
nil
([nil nil ((2470 . 2483) (2478 . 2488) (2479 . 2481) (2507 . 2517) (2508 . 2510) (2533 . 2542) 2532) ((#("
        " 0 1 (fontified nil) 1 9 (fontified t face whitespace-space)) . 2533) (#("  " 0 2 (face whitespace-space fontified nil)) . 2508) (#("
         " 0 1 (fontified nil) 1 9 (fontified t face whitespace-space) 9 10 (face whitespace-space fontified t)) . 2507) (undo-tree-id199 . -1) (#("  " 0 2 (fontified nil face whitespace-space)) . 2479) (#("
         " 0 1 (fontified nil) 1 10 (fontified t face whitespace-space)) . 2478) (#("
            " 0 1 (fontified t) 1 13 (fontified t face whitespace-space)) . 2470) (t 24754 32870 718101 866000)) (24754 32870 698502 935000) 0 nil])
nil
